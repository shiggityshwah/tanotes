{"version":3,"sources":["endlessClouds.svg","pencil.svg","polkaDots.svg","curtain.svg","bankNote.svg","greatwave.PNG","components/NoteBox.js","components/Menu.js","components/Header.js","components/Register.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NoteBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","Styled","currentNoteTitle","currentNoteText","titleChange","textChange","styles","options","children","objectWithoutProperties","propTypes","PropTypes","func","isRequired","classes","object","withStyles","createStyled","GridContainer","backgroundColor","GridItem","Typography","fontFamily","Paper","margin","padding","Note","Button","textTransform","background","bootstrapInput","borderRadius","position","border","fontSize","width","zIndex","transition","theme","transitions","create","&:focus","borderColor","purple","boxShadow","titleBox","cssLabel","color","&$cssFocused","cssFocused","cssUnderline","&:after","borderBottomColor","cssOutlinedInput","&$cssFocused $notchedOutline","notchedOutline","react_default","a","createElement","_ref","index_es","spacing","container","justify","alignItems","className","item","xs","fullWidth","InputLabelProps","root","focused","InputProps","label","id","multiline","rows","variant","Component","withTheme","IconButton","height","backgroundImage","concat","endlessClouds","&:hover","MenuIcon","bottom","filter","Popper","Divider","Menu","handleMenuToggle","event","currentTarget","setState","anchorEl","menuOpen","handleSubMenuToggle","subAnchorEl","subMenuOpen","handleMenuClose","console","log","_this2","_this$state","Menu_Styled","value","aria-label","onClick","src","pencil","alt","open","placement","disablePortal","_ref2","TransitionProps","onClickAway","assign","timeout","_ref3","square","AppBar","Grid","Icon","Header","Header_Styled","icons_index_es","lg","md","sm","components_Menu","Register","onSubmitRegister","fetch","method","headers","Content-Type","body","JSON","stringify","email","password","firstName","lastName","then","response","json","user","loadUser","onRouteChange","passConfirm","passWarn","handleInputChange","bind","assertThisInitialized","target","name","defineProperty","style","textAlign","type","onChange","required","marginTop","createMuiTheme","palette","primary","yellow","secondary","main","App","onTitleChange","newTitles","noteTitles","slice","currentNote","saveToDatabase","onTextChange","newTexts","noteTexts","onCreateNote","newNote","length","toConsumableArray","onClickTitle","title","isSaved","signedIn","timeoutId","clearTimeout","setTimeout","core_styles","Grid_default","components_Header","components_Register","xl","components_NoteBox","CheckBox_default","CheckBoxOutlineBlank_default","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.95a5058f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/endlessClouds.f90a827f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.a8a9ded9.svg\";","module.exports = __webpack_public_path__ + \"static/media/polkaDots.dda80a19.svg\";","module.exports = __webpack_public_path__ + \"static/media/curtain.df9dd7c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/bankNote.39615765.svg\";","module.exports = __webpack_public_path__ + \"static/media/greatwave.9d2ef1ec.PNG\";","import React, { Component } from \"react\";\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    InputBase,\r\n    InputLabel\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, withTheme } from \"@material-ui/core/styles\";\r\nimport purple from \"@material-ui/core/colors/purple\";\r\nimport \"../containers/App.css\";\r\nimport \"typeface-pacifico\";\r\nimport \"typeface-roboto\";\r\n\r\nfunction createStyled(styles, options) {\r\n    function Styled(props) {\r\n        const { children, ...other } = props;\r\n        return children(other);\r\n    }\r\n    Styled.propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        classes: PropTypes.object.isRequired\r\n    };\r\n    return withStyles(styles, options)(Styled);\r\n}\r\n\r\nclass NoteBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        const {\r\n            currentNoteTitle,\r\n            currentNoteText,\r\n            titleChange,\r\n            textChange,\r\n            theme\r\n        } = this.props;\r\n\r\n        const Styled = createStyled({\r\n            GridContainer: {\r\n                backgroundColor: \"#212121\"\r\n            },\r\n            GridItem: {\r\n            },\r\n            Typography: {\r\n                fontFamily: \"'Pacifico', cursive\"\r\n            },\r\n            Paper: {\r\n                margin: \"30px\",\r\n                padding: \"6px 20px 10px 20px\",\r\n                backgroundColor: \"#212121\"\r\n            },\r\n            Note: {\r\n                margin: \"3rem 0 0 0\"\r\n            },\r\n            Button: {\r\n                textTransform: \"none\",\r\n                margin: \"50px\",\r\n                background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\"\r\n            },\r\n            bootstrapInput: {\r\n                borderRadius: 4,\r\n                position: \"relative\",\r\n                border: \"1px solid #ced4da\",\r\n                fontSize: 16,\r\n                width: \"auto\",\r\n                padding: \"10px 12px\",\r\n                zIndex: 2,\r\n                backgroundColor: \"#616161\",\r\n                transition: theme.transitions.create([\r\n                    \"border-color\",\r\n                    \"box-shadow\"\r\n                ]),\r\n\r\n                fontFamily: \"'Roboto', cursive\",\r\n                \"&:focus\": {\r\n                    borderRadius: 4,\r\n                    borderColor: purple[500],\r\n                    boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\r\n                }\r\n            },\r\n            titleBox: {\r\n                padding: \"3.3rem 0 0 0\",\r\n            },\r\n            cssLabel: {\r\n                fontFamily: \"'Pacifico', cursive\",\r\n                color:  \"#fff\",\r\n                fontSize: \"5rem\",\r\n                \"&$cssFocused\": {\r\n                    fontFamily: \"'Pacifico', cursive\",\r\n                    color:  \"#FE6B8B\"\r\n                }\r\n            },\r\n            cssFocused: {},\r\n            cssUnderline: {\r\n                \"&:after\": {\r\n                    borderBottomColor: purple[900]\r\n                }\r\n            },\r\n            cssOutlinedInput: {\r\n                \"&$cssFocused $notchedOutline\": {\r\n                    borderColor: purple[500],\r\n                    fontFamily: \"'Roboto', cursive\",\r\n                    \"&:after\": {\r\n                        borderBottomColor: \"#80bdff\",\r\n                        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\r\n                    }\r\n                }\r\n            },\r\n            notchedOutline: {}\r\n        });\r\n\r\n        return (\r\n            <Styled>\r\n                {({ classes }) => (\r\n                    <Grid\r\n                        spacing={0}\r\n                        container\r\n                        justify=\"flex-end\"\r\n                        alignItems=\"center\"\r\n                        className={classes.GridContainer}\r\n                    >\r\n                        <Grid item xs={12} className={classes.GridItem} >\r\n                            <TextField\r\n                                fullWidth\r\n                                className={classes.titleBox}\r\n                                InputLabelProps={{\r\n                                    classes: {\r\n                                        root: classes.cssLabel,\r\n                                        focused: classes.cssFocused\r\n                                    }\r\n                                }}\r\n                                InputProps={{\r\n                                    classes: {\r\n                                        root: classes.cssOutlinedInput,\r\n                                        focused: classes.cssFocused,\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                                label=\"Title:\"\r\n                                id=\"custom-css-outlined-input\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"flex-start\">\r\n                                <Grid item xs={12} className={classes.GridItem}>\r\n                                <TextField\r\n                                fullWidth\r\n                                multiline\r\n                                rows={50}\r\n                                className={classes.titleBox}\r\n                                InputLabelProps={{\r\n                                    classes: {\r\n                                        root: classes.cssLabel,\r\n                                        focused: classes.cssFocused\r\n                                    }\r\n                                }}\r\n                                InputProps={{\r\n                                    classes: {\r\n                                        root: classes.cssOutlinedInput,\r\n                                        focused: classes.cssFocused,\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                                label=\"Note:\"\r\n                                id=\"custom-css-outlined-input\"\r\n                            />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.Button}\r\n                            >\r\n                                <Typography>SAVE NOTE</Typography>\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n            </Styled>\r\n        );\r\n    }\r\n}\r\n\r\nNoteBox.propTypes = {\r\n    theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTheme()(NoteBox);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Typography,\r\n    IconButton,\r\n    Collapse,\r\n    MenuList,\r\n    MenuItem,\r\n    ClickAwayListener,\r\n    Paper,\r\n    Popper,\r\n    Divider\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { MenuOutlined, ArrowDropDown, FiberNew } from \"@material-ui/icons\";\r\nimport endlessClouds from \"../endlessClouds.svg\";\r\nimport polkaDots from \"../polkaDots.svg\";\r\nimport pencil from \"../pencil.svg\";\r\nimport curtain from \"../curtain.svg\";\r\nimport bankNote from \"../bankNote.svg\";\r\nimport greatwave from \"../greatwave.PNG\";\r\n\r\nfunction createStyled(styles, options) {\r\n    function Styled(props) {\r\n        const { children, ...other } = props;\r\n        return children(other);\r\n    }\r\n    Styled.propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        classes: PropTypes.object.isRequired\r\n    };\r\n    return withStyles(styles, options)(Styled);\r\n}\r\n\r\nconst Styled = createStyled({\r\n    IconButton: {\r\n        height: \"6rem\",\r\n        width: \"6rem\",\r\n        //backgroundColor: \"#FF8E53\",\r\n        backgroundImage: `url(${endlessClouds})`,\r\n        \"&:hover\": {\r\n        }\r\n    },\r\n    MenuIcon: {\r\n        position:\"relative\",\r\n        bottom: \"1rem\",\r\n        zIndex: 2,\r\n        fontSize: 100,\r\n        filter: \"drop-shadow(.1rem .1rem .01rem #bf360c)\"\r\n    },\r\n    Popper: {\r\n        zIndex: 5\r\n    },\r\n    Paper: {\r\n        zIndex: 6,\r\n        width: \"15rem\",\r\n        backgroundColor: \"#212121\"\r\n    },\r\n    Divider: {\r\n        height: \".1rem\"\r\n    }\r\n});\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuOpen: false,\r\n            subMenuOpen: false,\r\n            anchorEl: null,\r\n            subAnchorEl: null\r\n        };\r\n    }\r\n\r\n    handleMenuToggle = event => {\r\n        const { currentTarget } = event;\r\n        this.setState(state => ({\r\n            anchorEl: currentTarget,\r\n            menuOpen: !state.menuOpen\r\n        }));\r\n    };\r\n\r\n    handleSubMenuToggle = event => {\r\n        const { currentTarget } = event;\r\n        this.setState(state => ({\r\n            subAnchorEl: currentTarget,\r\n            subMenuOpen: !state.subMenuOpen\r\n        }));\r\n    };\r\n\r\n    handleMenuClose = event => {\r\n        const { currentTarget } = event;\r\n        console.log(currentTarget);\r\n        this.setState({ menuOpen: false, subMenuOpen: false });\r\n    };\r\n\r\n    render() {\r\n        const { subMenuOpen, menuOpen, anchorEl, subAnchorEl } = this.state;\r\n        return (\r\n            <Styled>\r\n                {({ classes }) => (\r\n                    <div>\r\n                        \r\n                        <IconButton\r\n                        className={classes.IconButton}\r\n                            value=\"open\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={this.handleMenuToggle}\r\n                        >\r\n                           <img src={pencil} className={classes.MenuIcon}\r\n                            alt=\"menuIcon\" />\r\n                        </IconButton>\r\n\r\n                        <Popper\r\n                            open={menuOpen}\r\n                            anchorEl={anchorEl}\r\n                            placement=\"bottom-end\"\r\n                            className={classes.Popper}\r\n                            transition\r\n                            disablePortal\r\n                        >\r\n                            {({ TransitionProps, placement }) => (\r\n                                <ClickAwayListener\r\n                                    onClickAway={this.handleMenuClose}\r\n                                >\r\n                                    <Collapse\r\n                                        {...TransitionProps}\r\n                                        timeout={250}\r\n                                    >\r\n                                        <Paper className={classes.Paper}>\r\n                                            <MenuList>\r\n                                                <MenuItem\r\n                                                    onClick={\r\n                                                        this.handleMenuClose\r\n                                                    }\r\n                                                >\r\n                                                    New Note\r\n                                                </MenuItem>\r\n                                                <Divider\r\n                                                    className={classes.Divider}\r\n                                                />\r\n                                                <MenuItem\r\n                                                    onClick={\r\n                                                        this.handleMenuClose\r\n                                                    }\r\n                                                >\r\n                                                    Open Note\r\n                                                </MenuItem>\r\n                                                <MenuItem\r\n                                                    onClick={\r\n                                                        this.handleSubMenuToggle\r\n                                                    }\r\n                                                >\r\n                                                    Recent Notes\r\n                                                </MenuItem>\r\n                                                <Popper\r\n                                                    open={subMenuOpen}\r\n                                                    anchorEl={subAnchorEl}\r\n                                                    placement=\"left-start\"\r\n                                                    className={classes.Popper}\r\n                                                    transition\r\n                                                    disablePortal\r\n                                                >\r\n                                                    {({\r\n                                                        TransitionProps,\r\n                                                        placement\r\n                                                    }) => (\r\n                                                        <Paper\r\n                                                            square\r\n                                                            className={\r\n                                                                classes.Paper\r\n                                                            }\r\n                                                        >\r\n                                                            <MenuItem\r\n                                                                onClick={\r\n                                                                    this\r\n                                                                        .handleMenuClose\r\n                                                                }\r\n                                                            >\r\n                                                                recent note 1\r\n                                                            </MenuItem>\r\n                                                            <MenuItem\r\n                                                                onClick={\r\n                                                                    this\r\n                                                                        .handleMenuClose\r\n                                                                }\r\n                                                            >\r\n                                                                recent note 2\r\n                                                            </MenuItem>\r\n                                                            <MenuItem\r\n                                                                onClick={\r\n                                                                    this\r\n                                                                        .handleMenuClose\r\n                                                                }\r\n                                                            >\r\n                                                                recent note 3\r\n                                                            </MenuItem>\r\n                                                        </Paper>\r\n                                                    )}\r\n                                                </Popper>\r\n                                                <Divider\r\n                                                    className={classes.Divider}\r\n                                                />\r\n                                                <MenuItem\r\n                                                    onClick={\r\n                                                        this.handleMenuClose\r\n                                                    }\r\n                                                >\r\n                                                    My Account\r\n                                                </MenuItem>\r\n                                                <MenuItem\r\n                                                    onClick={\r\n                                                        this.handleMenuClose\r\n                                                    }\r\n                                                >\r\n                                                    Logout\r\n                                                </MenuItem>\r\n                                            </MenuList>\r\n                                        </Paper>\r\n                                    </Collapse>\r\n                                </ClickAwayListener>\r\n                            )}\r\n                        </Popper>\r\n                    </div>\r\n                )}\r\n            </Styled>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Description } from \"@material-ui/icons\";\r\nimport \"../containers/App.css\";\r\nimport Menu from \"./Menu\";\r\nimport \"typeface-pacifico\";\r\n\r\nfunction createStyled(styles, options) {\r\n    function Styled(props) {\r\n        const { children, ...other } = props;\r\n        return children(other);\r\n    }\r\n    Styled.propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        classes: PropTypes.object.isRequired\r\n    };\r\n    return withStyles(styles, options)(Styled);\r\n}\r\n\r\nconst Styled = createStyled({\r\n    AppBar: {\r\n        background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\"\r\n    },\r\n    Grid: {\r\n        padding: \"1rem\"\r\n    },\r\n    Icon: {\r\n        fontSize: 100,\r\n        color: \"#fff\",\r\n        filter: \"drop-shadow(.1rem .1rem .01rem #bf360c)\"\r\n    },\r\n    Typography: {\r\n        fontSize: 70,\r\n        fontFamily: \"'Pacifico', cursive\",\r\n        filter: \"drop-shadow(.1rem .1rem .01rem #bf360c)\"\r\n    },\r\n});\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <Styled>\r\n                {({ classes }) => (\r\n                    <AppBar className={classes.AppBar} position=\"static\">\r\n                        <Toolbar>\r\n                            <Grid\r\n                                className={classes.Grid}\r\n                                container\r\n                                justify=\"space-between\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid item xs=\"auto\">\r\n                                    <Description className={classes.Icon} />\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography className={classes.Typography}>\r\n                                        taNotes\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item lg={6} md={4} sm={2} xs={false} />\r\n                                <Grid item xs=\"auto\">\r\n                                    <Menu/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                )}\r\n            </Styled>\r\n        );\r\n    }\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport { Face, Fingerprint, PermIdentity, Error } from \"@material-ui/icons\";\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            passConfirm: \"\",\r\n            passWarn: false\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.onSubmitRegister = this.onSubmitRegister.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.id;\r\n        if (name === \"passConfirm\" && value !== this.state.password) {\r\n            this.setState({\r\n                passWarn: true\r\n            });\r\n        } else if (name === \"passConfirm\" && value === this.state.password) {\r\n            this.setState({\r\n                passWarn: false\r\n            });\r\n        }\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onSubmitRegister = () => {\r\n        fetch(\"localhost:3000/register\", {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange(\"home\");\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { passWarn } = this.state;\r\n        return (\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                style={{ width: \"600px\", margin: \"30px auto\" }}\r\n            >\r\n                <Paper\r\n                    style={{\r\n                        width: \"inherit\",\r\n                        backgroundColor: \"#616161\",\r\n                        padding: \"100px\"\r\n                    }}\r\n                >\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"center\"\r\n                        style={{ textAlign: \"center\" }}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <PermIdentity\r\n                                style={{ fontSize: 200, color: \"#fff\" }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                            <Typography variant=\"title\">\r\n                                Register A New User\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Face style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                type=\"text\"\r\n                                onChange={this.handleInputChange}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Face style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                type=\"text\"\r\n                                onChange={this.handleInputChange}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Face style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                type=\"email\"\r\n                                onChange={this.handleInputChange}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Fingerprint style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                onChange={this.handleInputChange}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    {passWarn ? (\r\n                        <Grid\r\n                            container\r\n                            spacing={8}\r\n                            alignItems=\"center\"\r\n                            justify=\"center\"\r\n                        >\r\n                            <Grid item>\r\n                                <Error style={{ color: \"#ff1744\" }} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>Passwords do not match.</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    ) : (\r\n                        <div style={{ padding: \"10px\" }} />\r\n                    )}\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"0px 20px 20px 20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Fingerprint style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"passConfirm\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                onChange={this.handleInputChange}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* <Grid container alignItems=\"center\" justify=\"space-between\">\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                disableFocusRipple\r\n                                disableRipple\r\n                                style={{ textTransform: \"none\" }}\r\n                                variant=\"text\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Forgot Password ?\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid> */}\r\n                    <Grid\r\n                        container\r\n                        justify=\"center\"\r\n                        style={{ padding: \"5px 10px\", marginTop: \"10px\" }}\r\n                    >\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"raised\"\r\n                            color=\"primary\"\r\n                            style={{ textTransform: \"none\" }}\r\n                            onClick={this.onSubmitRegister}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport NoteList from \"../components/NoteList\";\r\nimport NoteBox from \"../components/NoteBox\";\r\nimport Header from \"../components/Header\";\r\nimport Register from \"../components/Register\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CheckBox from \"@material-ui/icons/CheckBox\";\r\nimport CheckBoxOutlineBlank from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport \"./App.css\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: yellow,\r\n        secondary: {\r\n            main: \"#f44336\"\r\n        }\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currentNoteTitle: \"my note\",\r\n            currentNoteText: \"hi, this is my note\",\r\n            isSaved: false,\r\n            currentNote: 0,\r\n            noteTitles: [\"test1\", \"test2\"],\r\n            noteTexts: [\"test1\", \"test2\"],\r\n            signedIn: true,\r\n        };\r\n\r\n        this.timeoutId = null;\r\n\r\n    }\r\n    /*\r\n  componentDidMount() {\r\n    fetch('http://localhost:3000')\r\n      .then(response => response.json())\r\n      .then(db => {\r\n        if (db.noteTexts) {\r\n            console.log(db.noteTexts)\r\n        }\r\n      })\r\n      .catch('');\r\n  }\r\n */\r\n    onTitleChange = event => {\r\n        const newTitles = this.state.noteTitles.slice();\r\n        newTitles[this.state.currentNote] = event.target.value;\r\n        this.setState({ noteTitles: newTitles });\r\n        this.saveToDatabase();\r\n    };\r\n\r\n    onTextChange = event => {\r\n        const newTexts = this.state.noteTexts.slice();\r\n        newTexts[this.state.currentNote] = event.target.value;\r\n        this.setState({ noteTexts: newTexts });\r\n        this.saveToDatabase();\r\n    };\r\n\r\n    onCreateNote = () => {\r\n        const newNote = this.state.noteTitles.length;\r\n        const newTitles = [...this.state.noteTitles, \"\"];\r\n        const newTexts = [...this.state.noteTexts, \"\"];\r\n        this.setState({ noteTitles: newTitles });\r\n        this.setState({ noteTexts: newTexts });\r\n        this.setState({ currentNote: newNote });\r\n    };\r\n\r\n    onClickTitle = event => {\r\n        const title = event.target.id;\r\n        this.setState({ currentNote: title });\r\n    };\r\n\r\n    saveToDatabase() {\r\n        this.setState({ isSaved: false });\r\n        if (this.timeoutId) {\r\n            clearTimeout(this.timeoutId);\r\n        }\r\n        this.timeoutId = setTimeout(() => {\r\n            this.setState({ isSaved: true });\r\n        }, 3000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    alignItems=\"stretch\"\r\n                    style={{ backgroundColor: \"#424242\" }}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Header />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        {this.state.signedIn === false ? (\r\n                            <Register />\r\n                        ) : (\r\n                                <Grid container justify=\"center\" spacing={0}>\r\n                                    \r\n                                    <Grid\r\n                                        item\r\n                                        xs={12}\r\n                                        sm={12}\r\n                                        md={12}\r\n                                        lg={10}\r\n                                        xl={8}\r\n                                    >\r\n                                        <NoteBox\r\n                                            currentNoteTitle={\r\n                                                this.state.noteTitles[\r\n                                                this.state.currentNote\r\n                                                ]\r\n                                            }\r\n                                            currentNoteText={\r\n                                                this.state.noteTexts[\r\n                                                this.state.currentNote\r\n                                                ]\r\n                                            }\r\n                                            titleChange={this.onTitleChange}\r\n                                            textChange={this.onTextChange}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                            <Grid style={{ width: \"100%\"}} container spacing={16}>\r\n                                <Grid item xs={12}>\r\n                                    <Grid\r\n                                        container\r\n                                        justify=\"center\"\r\n                                        alignItems=\"center\"\r\n                                    >\r\n                                        <Grid item>Saved:</Grid>\r\n                                        <Grid item>\r\n                                            {this.state.isSaved ? (\r\n                                                <CheckBox\r\n                                                    style={{ fontSize: 40 }}\r\n                                                />\r\n                                            ) : (\r\n                                                    <CheckBoxOutlineBlank\r\n                                                        style={{ fontSize: 40 }}\r\n                                                    />\r\n                                                )}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid\r\n                                    item\r\n                                    xs={12}\r\n                                    style={{ textAlign: \"center\" }}\r\n                                >\r\n                                    Current  Note:{\" \"}\r\n                                    {\r\n                                        this.state.noteTitles[\r\n                                        this.state.currentNote\r\n                                        ]\r\n                                    }\r\n                                </Grid>\r\n                            </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}