{"version":3,"sources":["pencil.svg","images/headerbg.jpg","polkaDots.svg","curtain.svg","bankNote.svg","greatwave.PNG","components/NoteList.js","components/NoteBox.js","components/Menu.js","components/Header.js","components/Register.js","containers/App.js","serviceWorker.js","index.js","endlessClouds.svg"],"names":["module","exports","__webpack_require__","p","NoteList","_ref","noteTitles","createNote","clickTitle","noteComponent","map","user","i","react_default","a","createElement","index_es","fullWidth","id","variant","onClick","style","borderRadius","margin","minHeight","padding","background","fontSize","fontFamily","position","height","zIndex","alignItems","justify","container","item","xs","textAlign","color","border","Styled","styles","options","props","children","Object","objectWithoutProperties","propTypes","PropTypes","func","isRequired","classes","object","withStyles","createStyled","GridContainer","GridItem","Paper","Note","Button","textTransform","titleBox","cssLabel","fontStyle","&$cssFocused","cssFocused","cssUnderline","&:after","borderBottomColor","purple","cssOutlinedInput","&$cssFocused $notchedOutline","borderColor","boxShadow","Typography","filter","NoteBox","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","currentNoteTitle","currentNoteText","titleChange","textChange","theme","NoteBox_Styled","spacing","className","InputLabelProps","root","focused","InputProps","label","onChange","value","multiline","rows","Component","withTheme","IconButton","width","backgroundImage","concat","endlessClouds","&:hover","MenuIcon","bottom","Popper","backgroundColor","Divider","Menu","handleMenuToggle","event","currentTarget","setState","anchorEl","menuOpen","handleSubMenuToggle","subAnchorEl","subMenuOpen","handleMenuClose","console","log","_this2","_this$state","Menu_Styled","aria-label","src","pencil","alt","open","placement","transition","disablePortal","_ref2","TransitionProps","onClickAway","assign","timeout","_ref3","square","AppBar","Grid","Icon","Header","Header_Styled","elevation","components_Menu","lg","md","sm","Register","onSubmitRegister","fetch","method","headers","Content-Type","body","JSON","stringify","email","password","firstName","lastName","then","response","json","loadUser","onRouteChange","passConfirm","passWarn","handleInputChange","bind","assertThisInitialized","target","name","defineProperty","icons_index_es","type","required","marginTop","createMuiTheme","palette","primary","blueGrey","secondary","main","App","onTitleChange","newTitles","slice","currentNote","saveToDatabase","onTextChange","newTexts","noteTexts","onCreateNote","newNote","length","toConsumableArray","onClickTitle","title","isSaved","signedIn","timeoutId","clearTimeout","setTimeout","core_styles","Background","backgroundPosition","backgroundSize","display","pointerEvents","Grid_default","components_Header","components_Register","xl","components_NoteBox","components_NoteList","CheckBox_default","CheckBoxOutlineBlank_default","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6e644635.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pencil.a8a9ded9.svg\";","module.exports = __webpack_public_path__ + \"static/media/headerbg.c0a25d22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/polkaDots.dda80a19.svg\";","module.exports = __webpack_public_path__ + \"static/media/curtain.591456e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/bankNote.39615765.svg\";","module.exports = __webpack_public_path__ + \"static/media/greatwave.9d2ef1ec.PNG\";","import React from \"react\";\r\nimport {\r\n    ListItem,\r\n    Grid,\r\n    List,\r\n    Button,\r\n    Paper,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport \"../containers/App.css\";\r\nimport \"typeface-pacifico\";\r\nimport \"typeface-ropa-sans\";\r\n\r\nconst NoteList = ({ noteTitles, createNote, clickTitle }) => {\r\n    const noteComponent = noteTitles.map((user, i) => {\r\n        return (\r\n            <Button\r\n                fullWidth\r\n                id={i}\r\n                variant=\"contained\"\r\n                onClick={clickTitle}\r\n                style={{\r\n                    borderRadius:\"1.25rem\",\r\n                    margin: \".5rem 0\",\r\n                    minHeight: \"2.5rem\",\r\n                    padding: \".5rem\",\r\n                    background: \"rgba(40, 40, 40, 0.7)\"\r\n                }}\r\n            >\r\n                <Typography\r\n                    style={{\r\n                        fontSize: \"1rem\",\r\n                        fontFamily: \"'Ropa Sans', sans-serif\"\r\n                    }}\r\n                >\r\n                    {noteTitles[i]}\r\n                </Typography>\r\n            </Button>\r\n        );\r\n    });\r\n    return (\r\n        <Paper style={{position:\"relative\", height:\"100%\", margin:\"30px\", borderRadius:\"10px\", background:\"rgba(20,20,20,0.5)\", zIndex:3 }}>\r\n        <Grid alignItems=\"stretch\" justify=\"center\" container>\r\n            <Grid\r\n                item\r\n                xs={10}\r\n                style={{\r\n                    margin: \".5rem\",\r\n                    padding: \"1rem 0 0 0\",\r\n                    position: \"relative\",\r\n                    textAlign: \"center\",\r\n                    zIndex: 6\r\n                }}\r\n            >\r\n                {noteComponent}\r\n\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    \r\n                    color=\"primary\"\r\n                    style={{\r\n                        margin: \"1rem 0\",\r\n                        minHeight: \"1.5rem\",\r\n                        padding: \".5rem\",\r\n                        background: \"rgba(40, 40, 40,.6)\",\r\n                border: \"solid 2px #16B2AA\",\r\n                borderRadius: 100\r\n                    }}\r\n                    onClick={createNote}\r\n                >\r\n                    + create new note\r\n                </Button>\r\n            </Grid>\r\n        </Grid></Paper>\r\n    );\r\n};\r\nexport default NoteList;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    InputBase,\r\n    InputLabel\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, withTheme } from \"@material-ui/core/styles\";\r\nimport purple from \"@material-ui/core/colors/purple\";\r\nimport \"../containers/App.css\";\r\nimport \"typeface-pacifico\";\r\nimport \"typeface-roboto\";\r\nimport \"typeface-ropa-sans\";\r\nimport endlessClouds from \"../endlessClouds.svg\";\r\n\r\nfunction createStyled(styles, options) {\r\n    function Styled(props) {\r\n        const { children, ...other } = props;\r\n        return children(other);\r\n    }\r\n    Styled.propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        classes: PropTypes.object.isRequired\r\n    };\r\n    return withStyles(styles, options)(Styled);\r\n}\r\nconst Styled = createStyled({\r\n            GridContainer: {\r\n               \r\n            },\r\n            GridItem: {},\r\n            Paper: {\r\n                position: \"relative\",\r\n                margin: \"30px\",\r\n                padding: \"6px 20px 10px 20px\",\r\n                borderRadius: \"10px\",\r\n                background: \"rgba(21, 21, 21,.6)\",\r\n                zIndex: 5\r\n            },\r\n            Note: {\r\n                margin: \"3rem 0 0 0\"\r\n            },\r\n            Button: {\r\n                textTransform: \"none\",\r\n                margin: \"50px\",\r\n                background: \"rgba(40, 40, 40,.6)\",\r\n                border: \"solid 2px #16B2AA\",\r\n                borderRadius: 100\r\n                \r\n            },\r\n        \r\n           \r\n            titleBox: {\r\n                padding: \"3.3rem 0 0 0\"\r\n            },\r\n            cssLabel: {\r\n                fontFamily: \"'Ropa Sans', sans-serif\",\r\n                fontStyle: \"italic\",\r\n                color: \"#fff\",\r\n                fontSize: \"5rem\",\r\n                \"&$cssFocused\": {\r\n                    fontFamily: \"'Ropa Sans', sans-serif\",\r\n\r\n                    color: \"#FE6B8B\"\r\n                }\r\n            },\r\n            cssFocused: {},\r\n            cssUnderline: {\r\n                \"&:after\": {\r\n                    borderBottomColor: purple[900]\r\n                }\r\n            },\r\n            cssOutlinedInput: {\r\n                \"&$cssFocused $notchedOutline\": {\r\n                    borderColor: purple[500],\r\n                    fontFamily: \"'Roboto', cursive\",\r\n                    \"&:after\": {\r\n                        borderBottomColor: \"#80bdff\",\r\n                        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\r\n                    }\r\n                }\r\n            },\r\n            Typography: {\r\n                fontFamily: \"'Ropa Sans', sans-serif\",\r\n                fontSize: \"2rem\",\r\n                filter: \"drop-shadow(.1rem .1rem .01rem #bf360c)\"\r\n            }\r\n        });\r\nclass NoteBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        const {\r\n            currentNoteTitle,\r\n            currentNoteText,\r\n            titleChange,\r\n            textChange,\r\n            theme\r\n        } = this.props;\r\n\r\n        \r\n\r\n        return (\r\n            <Styled>\r\n                {({ classes }) => (\r\n                    \r\n                        <Grid\r\n                            spacing={0}\r\n                            container\r\n                            justify=\"flex-end\"\r\n                            alignItems=\"center\"\r\n                            className={classes.GridContainer}\r\n                        >\r\n                            <Grid item xs={12} className={classes.GridItem}><Paper className={classes.Paper}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    className={classes.titleBox}\r\n                                    InputLabelProps={{\r\n                                        classes: {\r\n                                            root: classes.cssLabel,\r\n                                            focused: classes.cssFocused\r\n                                        }\r\n                                    }}\r\n                                    InputProps={{\r\n                                        classes: {\r\n                                            root: classes.cssOutlinedInput,\r\n                                            focused: classes.cssFocused,\r\n                                        }\r\n                                    }}\r\n                                    label=\"Title:\"\r\n                                    id=\"custom-css-outlined-input\"\r\n                                    onChange={titleChange}\r\n                                    value={currentNoteTitle}\r\n                                />\r\n                            \r\n                                        <TextField\r\n                                            fullWidth\r\n                                            multiline\r\n                                            rows={10}\r\n                                            className={classes.titleBox}\r\n                                            InputLabelProps={{\r\n                                                classes: {\r\n                                                    root: classes.cssLabel,\r\n                                                    focused: classes.cssFocused\r\n                                                }\r\n                                            }}\r\n                                            InputProps={{\r\n                                                classes: {\r\n                                                    root:\r\n                                                        classes.cssOutlinedInput,\r\n                                                    focused: classes.cssFocused,\r\n                                                }\r\n                                            }}\r\n                                            label=\"Note:\"\r\n                                            id=\"custom-css-outlined-input\"\r\n                                            onChange={textChange}\r\n                                            value={currentNoteText}\r\n                                        />\r\n                                   </Paper>\r\n\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.Button}\r\n                                >\r\n                                    <Typography className={classes.Typography} >SAVE NOTE</Typography>\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    \r\n                )}\r\n            </Styled>\r\n        );\r\n    }\r\n}\r\n\r\nNoteBox.propTypes = {\r\n    theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTheme()(NoteBox);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Typography,\r\n    IconButton,\r\n    Collapse,\r\n    MenuList,\r\n    MenuItem,\r\n    ClickAwayListener,\r\n    Paper,\r\n    Popper,\r\n    Divider\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { MenuOutlined, ArrowDropDown, FiberNew } from \"@material-ui/icons\";\r\nimport endlessClouds from \"../endlessClouds.svg\";\r\nimport polkaDots from \"../polkaDots.svg\";\r\nimport pencil from \"../pencil.svg\";\r\nimport curtain from \"../curtain.svg\";\r\nimport bankNote from \"../bankNote.svg\";\r\nimport greatwave from \"../greatwave.PNG\";\r\n\r\nfunction createStyled(styles, options) {\r\n    function Styled(props) {\r\n        const { children, ...other } = props;\r\n        return children(other);\r\n    }\r\n    Styled.propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        classes: PropTypes.object.isRequired\r\n    };\r\n    return withStyles(styles, options)(Styled);\r\n}\r\n\r\nconst Styled = createStyled({\r\n    IconButton: {\r\n        height: \"6rem\",\r\n        width: \"6rem\",\r\n        //backgroundColor: \"#FF8E53\",\r\n        backgroundImage: `url(${endlessClouds})`,\r\n        \"&:hover\": {\r\n        }\r\n    },\r\n    MenuIcon: {\r\n        position:\"relative\",\r\n        bottom: \"1rem\",\r\n        zIndex: 2,\r\n        fontSize: 100,\r\n        filter: \"drop-shadow(.1rem .1rem .01rem #bf360c)\"\r\n    },\r\n    Popper: {\r\n        zIndex: 5\r\n    },\r\n    Paper: {\r\n        zIndex: 6,\r\n        width: \"15rem\",\r\n        backgroundColor: \"#212121\"\r\n    },\r\n    Divider: {\r\n        height: \".1rem\"\r\n    }\r\n});\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuOpen: false,\r\n            subMenuOpen: false,\r\n            anchorEl: null,\r\n            subAnchorEl: null\r\n        };\r\n    }\r\n\r\n    handleMenuToggle = event => {\r\n        const { currentTarget } = event;\r\n        this.setState(state => ({\r\n            anchorEl: currentTarget,\r\n            menuOpen: !state.menuOpen\r\n        }));\r\n    };\r\n\r\n    handleSubMenuToggle = event => {\r\n        const { currentTarget } = event;\r\n        this.setState(state => ({\r\n            subAnchorEl: currentTarget,\r\n            subMenuOpen: !state.subMenuOpen\r\n        }));\r\n    };\r\n\r\n    handleMenuClose = event => {\r\n        const { currentTarget } = event;\r\n        console.log(currentTarget);\r\n        this.setState({ menuOpen: false, subMenuOpen: false });\r\n    };\r\n\r\n    render() {\r\n        const { subMenuOpen, menuOpen, anchorEl, subAnchorEl } = this.state;\r\n        return (\r\n            <Styled>\r\n                {({ classes }) => (\r\n                    <div>\r\n                        \r\n                        <IconButton\r\n                        className={classes.IconButton}\r\n                            value=\"open\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={this.handleMenuToggle}\r\n                        >\r\n                           <img src={pencil} className={classes.MenuIcon}\r\n                            alt=\"menuIcon\" />\r\n                        </IconButton>\r\n\r\n                        <Popper\r\n                            open={menuOpen}\r\n                            anchorEl={anchorEl}\r\n                            placement=\"bottom-end\"\r\n                            className={classes.Popper}\r\n                            transition\r\n                            disablePortal\r\n                        >\r\n                            {({ TransitionProps, placement }) => (\r\n                                <ClickAwayListener\r\n                                    onClickAway={this.handleMenuClose}\r\n                                >\r\n                                    <Collapse\r\n                                        {...TransitionProps}\r\n                                        timeout={250}\r\n                                    >\r\n                                        <Paper className={classes.Paper}>\r\n                                            <MenuList>\r\n                                                <MenuItem\r\n                                                    onClick={\r\n                                                        this.handleMenuClose\r\n                                                    }\r\n                                                >\r\n                                                    New Note\r\n                                                </MenuItem>\r\n                                                <Divider\r\n                                                    className={classes.Divider}\r\n                                                />\r\n                                                <MenuItem\r\n                                                    onClick={\r\n                                                        this.handleMenuClose\r\n                                                    }\r\n                                                >\r\n                                                    Open Note\r\n                                                </MenuItem>\r\n                                                <MenuItem\r\n                                                    onClick={\r\n                                                        this.handleSubMenuToggle\r\n                                                    }\r\n                                                >\r\n                                                    Recent Notes\r\n                                                </MenuItem>\r\n                                                <Popper\r\n                                                    open={subMenuOpen}\r\n                                                    anchorEl={subAnchorEl}\r\n                                                    placement=\"left-start\"\r\n                                                    className={classes.Popper}\r\n                                                    transition\r\n                                                    disablePortal\r\n                                                >\r\n                                                    {({\r\n                                                        TransitionProps,\r\n                                                        placement\r\n                                                    }) => (\r\n                                                        <Paper\r\n                                                            square\r\n                                                            className={\r\n                                                                classes.Paper\r\n                                                            }\r\n                                                        >\r\n                                                            <MenuItem\r\n                                                                onClick={\r\n                                                                    this\r\n                                                                        .handleMenuClose\r\n                                                                }\r\n                                                            >\r\n                                                                recent note 1\r\n                                                            </MenuItem>\r\n                                                            <MenuItem\r\n                                                                onClick={\r\n                                                                    this\r\n                                                                        .handleMenuClose\r\n                                                                }\r\n                                                            >\r\n                                                                recent note 2\r\n                                                            </MenuItem>\r\n                                                            <MenuItem\r\n                                                                onClick={\r\n                                                                    this\r\n                                                                        .handleMenuClose\r\n                                                                }\r\n                                                            >\r\n                                                                recent note 3\r\n                                                            </MenuItem>\r\n                                                        </Paper>\r\n                                                    )}\r\n                                                </Popper>\r\n                                                <Divider\r\n                                                    className={classes.Divider}\r\n                                                />\r\n                                                <MenuItem\r\n                                                    onClick={\r\n                                                        this.handleMenuClose\r\n                                                    }\r\n                                                >\r\n                                                    My Account\r\n                                                </MenuItem>\r\n                                                <MenuItem\r\n                                                    onClick={\r\n                                                        this.handleMenuClose\r\n                                                    }\r\n                                                >\r\n                                                    Logout\r\n                                                </MenuItem>\r\n                                            </MenuList>\r\n                                        </Paper>\r\n                                    </Collapse>\r\n                                </ClickAwayListener>\r\n                            )}\r\n                        </Popper>\r\n                    </div>\r\n                )}\r\n            </Styled>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Description } from \"@material-ui/icons\";\r\nimport \"../containers/App.css\";\r\nimport Menu from \"./Menu\";\r\nimport \"typeface-pacifico\";\r\n\r\nfunction createStyled(styles, options) {\r\n    function Styled(props) {\r\n        const { children, ...other } = props;\r\n        return children(other);\r\n    }\r\n    Styled.propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        classes: PropTypes.object.isRequired\r\n    };\r\n    return withStyles(styles, options)(Styled);\r\n}\r\n\r\nconst Styled = createStyled({\r\n    AppBar: {\r\n        background: \"rgba(0,0,0,0)\"\r\n    },\r\n    Grid: {\r\n        padding: \"1rem\"\r\n    },\r\n    Icon: {\r\n        fontSize: 100,\r\n        color: \"#fff\",\r\n        filter: \"drop-shadow(.1rem .1rem .01rem #bf360c)\"\r\n    },\r\n    Typography: {\r\n        fontSize: 70,\r\n        fontFamily: \"'Pacifico', cursive\",\r\n        filter: \"drop-shadow(.1rem .1rem .01rem #bf360c)\"\r\n    },\r\n});\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <Styled>\r\n                {({ classes }) => (\r\n                    <AppBar color=\"default\" elevation={4} className={classes.AppBar} position=\"sticky\">\r\n                        <Toolbar>\r\n                            <Grid\r\n                                className={classes.Grid}\r\n                                container\r\n                                justify=\"space-between\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid item xs=\"auto\">\r\n                                    <Menu/>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography className={classes.Typography}>\r\n                                        taNotes\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item lg={6} md={4} sm={2} xs={false}> </Grid>\r\n                                <Grid item xs=\"auto\">\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                )}\r\n            </Styled>\r\n        );\r\n    }\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport { Face, Fingerprint, PermIdentity, Error } from \"@material-ui/icons\";\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            passConfirm: \"\",\r\n            passWarn: false\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.onSubmitRegister = this.onSubmitRegister.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.id;\r\n        if (name === \"passConfirm\" && value !== this.state.password) {\r\n            this.setState({\r\n                passWarn: true\r\n            });\r\n        } else if (name === \"passConfirm\" && value === this.state.password) {\r\n            this.setState({\r\n                passWarn: false\r\n            });\r\n        }\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onSubmitRegister = () => {\r\n        fetch(\"localhost:3000/register\", {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange(\"home\");\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { passWarn } = this.state;\r\n        return (\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                style={{ width: \"600px\", margin: \"30px auto\" }}\r\n            >\r\n                <Paper\r\n                    style={{\r\n                        width: \"inherit\",\r\n                        backgroundColor: \"#616161\",\r\n                        padding: \"100px\"\r\n                    }}\r\n                >\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"center\"\r\n                        style={{ textAlign: \"center\" }}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <PermIdentity\r\n                                style={{ fontSize: 200, color: \"#fff\" }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                            <Typography variant=\"title\">\r\n                                Register A New User\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Face style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                type=\"text\"\r\n                                onChange={this.handleInputChange}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Face style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                type=\"text\"\r\n                                onChange={this.handleInputChange}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Face style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                type=\"email\"\r\n                                onChange={this.handleInputChange}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Fingerprint style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                onChange={this.handleInputChange}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    {passWarn ? (\r\n                        <Grid\r\n                            container\r\n                            spacing={8}\r\n                            alignItems=\"center\"\r\n                            justify=\"center\"\r\n                        >\r\n                            <Grid item>\r\n                                <Error style={{ color: \"#ff1744\" }} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>Passwords do not match.</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    ) : (\r\n                        <div style={{ padding: \"10px\" }} />\r\n                    )}\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"0px 20px 20px 20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Fingerprint style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"passConfirm\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                onChange={this.handleInputChange}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* <Grid container alignItems=\"center\" justify=\"space-between\">\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                disableFocusRipple\r\n                                disableRipple\r\n                                style={{ textTransform: \"none\" }}\r\n                                variant=\"text\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Forgot Password ?\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid> */}\r\n                    <Grid\r\n                        container\r\n                        justify=\"center\"\r\n                        style={{ padding: \"5px 10px\", marginTop: \"10px\" }}\r\n                    >\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"raised\"\r\n                            color=\"primary\"\r\n                            style={{ textTransform: \"none\" }}\r\n                            onClick={this.onSubmitRegister}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport NoteList from \"../components/NoteList\";\r\nimport NoteBox from \"../components/NoteBox\";\r\nimport Header from \"../components/Header\";\r\nimport Register from \"../components/Register\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CheckBox from \"@material-ui/icons/CheckBox\";\r\nimport CheckBoxOutlineBlank from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport \"./App.css\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\nimport Background from \"../images/headerbg.jpg\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: blueGrey,\r\n        secondary: {\r\n            main: \"#f44336\"\r\n        }\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currentNoteTitle: \"my note\",\r\n            currentNoteText: \"hi, this is my note\",\r\n            isSaved: false,\r\n            currentNote: 0,\r\n            noteTitles: [\"test1\", \"test2\"],\r\n            noteTexts: [\"test1\", \"test2\"],\r\n            signedIn: true\r\n        };\r\n\r\n        this.timeoutId = null;\r\n    }\r\n    /*\r\n  componentDidMount() {\r\n    fetch('http://localhost:3000')\r\n      .then(response => response.json())\r\n      .then(db => {\r\n        if (db.noteTexts) {\r\n            console.log(db.noteTexts)\r\n        }\r\n      })\r\n      .catch('');\r\n  }\r\n */\r\n    onTitleChange = event => {\r\n        const newTitles = this.state.noteTitles.slice();\r\n        newTitles[this.state.currentNote] = event.target.value;\r\n        this.setState({ noteTitles: newTitles });\r\n        this.saveToDatabase();\r\n    };\r\n\r\n    onTextChange = event => {\r\n        const newTexts = this.state.noteTexts.slice();\r\n        newTexts[this.state.currentNote] = event.target.value;\r\n        this.setState({ noteTexts: newTexts });\r\n        this.saveToDatabase();\r\n    };\r\n\r\n    onCreateNote = () => {\r\n        const newNote = this.state.noteTitles.length;\r\n        const newTitles = [...this.state.noteTitles, \"\"];\r\n        const newTexts = [...this.state.noteTexts, \"\"];\r\n        this.setState({ noteTitles: newTitles });\r\n        this.setState({ noteTexts: newTexts });\r\n        this.setState({ currentNote: newNote });\r\n    };\r\n\r\n    onClickTitle = event => {\r\n        const title = event.currentTarget.id;\r\n        console.log(event.currentTarget);\r\n        this.setState({ currentNote: title });\r\n    };\r\n\r\n    saveToDatabase() {\r\n        this.setState({ isSaved: false });\r\n        if (this.timeoutId) {\r\n            clearTimeout(this.timeoutId);\r\n        }\r\n        this.timeoutId = setTimeout(() => {\r\n            this.setState({ isSaved: true });\r\n        }, 3000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        backgroundImage: `url(${Background})`,\r\n                        backgroundPosition: \"50%\",\r\n                        backgroundSize: \"cover\",\r\n                        zIndex: 0,\r\n                        display: \"flex\",\r\n                        width: \"100%\",\r\n                        height: \"250px\",\r\n                        pointerEvents:\"none\"\r\n                    }}\r\n                />\r\n                <div\r\n                    style={{\r\n                        background:\r\n                            \"linear-gradient(180deg,rgba(11, 11, 19,.8),#0b0b13)\",\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        zIndex: 0,\r\n                        height: \"250px\",\r\n                        pointerEvents:\"none\"\r\n                    }}\r\n                />\r\n\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    position=\"relative\"\r\n                    alignItems=\"stretch\"\r\n                    style={{\r\n                        backgroundColor: \"#0b0b13\"\r\n                    }}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Header />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        {this.state.signedIn === false ? (\r\n                            <Register />\r\n                        ) : (\r\n                            <Grid container justify=\"center\" spacing={0}>\r\n                                <Grid\r\n                                    item\r\n                                    xs={12}\r\n                                    sm={12}\r\n                                    md={12}\r\n                                    lg={9}\r\n                                    xl={8}\r\n                                >\r\n                                    <NoteBox\r\n                                        style={{ zIndex: 3 }}\r\n                                        currentNoteTitle={\r\n                                            this.state.noteTitles[\r\n                                                this.state.currentNote\r\n                                            ]\r\n                                        }\r\n                                        currentNoteText={\r\n                                            this.state.noteTexts[\r\n                                                this.state.currentNote\r\n                                            ]\r\n                                        }\r\n                                        titleChange={this.onTitleChange}\r\n                                        textChange={this.onTextChange}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid  item xs={3}>\r\n                                    <NoteList\r\n                                        noteTitles={this.state.noteTitles}\r\n                                        createNote={this.onCreateNote}\r\n                                        clickTitle={this.onClickTitle}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid style={{ width: \"100%\" }} container spacing={16}>\r\n                            <Grid item xs={12}>\r\n                                <Grid\r\n                                    container\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\"\r\n                                >\r\n                                    <Grid item>Saved:</Grid>\r\n                                    <Grid item>\r\n                                        {this.state.isSaved ? (\r\n                                            <CheckBox\r\n                                                style={{ fontSize: 40 }}\r\n                                            />\r\n                                        ) : (\r\n                                            <CheckBoxOutlineBlank\r\n                                                style={{ fontSize: 40 }}\r\n                                            />\r\n                                        )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                                Current Note:{\" \"}\r\n                                {this.state.noteTitles[this.state.currentNote]}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/endlessClouds.f90a827f.svg\";"],"sourceRoot":""}