{"version":3,"sources":["components/NoteList.js","components/NoteBox.js","components/NavBar.js","components/Register.js","containers/App.js","serviceWorker.js","index.js"],"names":["NoteList","_ref","noteTitles","createNote","clickTitle","noteComponent","map","user","i","react_default","a","createElement","index_es","button","key","id","onClick","divider","alignItems","container","item","xs","style","textAlign","component","justify","width","backgroundColor","fullWidth","variant","color","textTransform","NoteBox","currentNoteTitle","currentNoteText","titleChange","textChange","padding","fontFamily","md","sm","margin","value","onChange","multiline","rows","defaultValue","NavBar","MuiThemeProvider_default","AppBar_default","position","Toolbar_default","icons_index_es","fontSize","Typography_default","Register","state","firstName","lastName","email","password","handleChange","input","e","_this","setState","Object","defineProperty","target","_this$state","this","spacing","label","type","autoFocus","required","control","disableFocusRipple","disableRipple","marginTop","Component","theme","createMuiTheme","palette","primary","yellow","secondary","main","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onTitleChange","event","newTitles","slice","currentNote","saveToDatabase","onTextChange","newTexts","noteTexts","onCreateNote","newNote","length","concat","toConsumableArray","onClickTitle","title","isSaved","signedIn","timeoutId","bind","assertThisInitialized","_this2","clearTimeout","setTimeout","styles","Grid_default","components_NavBar","components_Register","components_NoteBox","components_NoteList","className","CheckBox_default","CheckBoxOutlineBlank_default","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.89cf5a85.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    ListItem,\r\n    Grid,\r\n    List,\r\n    Button,\r\n    Paper,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport \"../containers/App.css\";\r\nimport \"typeface-pacifico\";\r\n\r\nconst NoteList = ({ noteTitles, createNote, clickTitle }) => {\r\n    const noteComponent = noteTitles.map((user, i) => {\r\n        return (\r\n            <ListItem button key={i} id={i} onClick={clickTitle} divider>\r\n                <Typography>{noteTitles[i]}</Typography>\r\n            </ListItem>\r\n        );\r\n    });\r\n    return (\r\n        <Paper>\r\n            <Grid alignItems=\"stretch\" container>\r\n                <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                    <List\r\n                        component=\"nav\"\r\n                        justify=\"center\"\r\n                        style={{ width: \"inherit\", backgroundColor: \"#424242\" }}\r\n                    >\r\n                        {noteComponent}\r\n                        <ListItem>\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"raised\"\r\n                                color=\"primary\"\r\n                                style={{ textTransform: \"none\" }}\r\n                                onClick={createNote}\r\n                            >\r\n                                + create new note\r\n                            </Button>\r\n                        </ListItem>\r\n                    </List>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\nexport default NoteList;\r\n","import React from \"react\";\r\nimport { Paper, Grid, TextField, Button, Typography } from \"@material-ui/core\";\r\nimport \"../containers/App.css\";\r\nimport \"typeface-pacifico\";\r\n\r\nconst NoteBox = ({\r\n    currentNoteTitle,\r\n    currentNoteText,\r\n    titleChange,\r\n    textChange\r\n}) => {\r\n    return (\r\n        <Grid\r\n            container\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n            style={{ padding: \"50px\" }}\r\n        >\r\n            <Grid item xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                    <Grid item>\r\n                        <Typography\r\n                            variant=\"h2\"\r\n                            style={{ fontFamily: \"'Pacifico', cursive\" }}\r\n                        >\r\n                            Title:\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item md={true} sm={12} xs={12}>\r\n                        <Paper\r\n                            style={{\r\n                                margin: \"30px\",\r\n                                padding: \"6px 20px 10px 20px\",\r\n                                backgroundColor: \"#212121\"\r\n                            }}\r\n                        >\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"title\"\r\n                                value={currentNoteTitle}\r\n                                onChange={titleChange}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Grid container alignItems=\"flexStart\">\r\n                    <Grid item>\r\n                        <Typography\r\n                            variant=\"h2\"\r\n                            style={{ fontFamily: \"'Pacifico', cursive\" }}\r\n                        >\r\n                            Note:\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item md={true} sm={12} xs={12}>\r\n                        <Paper\r\n                            style={{\r\n                                margin: \"30px\",\r\n                                padding: \"6px 20px 10px 20px\",\r\n                                backgroundColor: \"#212121\"\r\n                            }}\r\n                        >\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"text\"\r\n                                multiline\r\n                                rows=\"4\"\r\n                                defaultValue=\"Default Value\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                value={currentNoteText}\r\n                                onChange={textChange}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                <Button\r\n                    variant=\"raised\"\r\n                    color=\"primary\"\r\n                    style={{ textTransform: \"none\", margin: \"0px 50px\" }}\r\n                >\r\n                    SAVE NOTE\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\nexport default NoteBox;\r\n","import React from \"react\";\r\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Description } from \"@material-ui/icons\";\r\nimport \"../containers/App.css\";\r\nimport \"typeface-pacifico\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <MuiThemeProvider>\r\n            <AppBar position=\"static\" style={{ backgroundColor: \"#9C27B0\" }}>\r\n                <Toolbar style={{ padding: \"30px\" }}>\r\n                    <Description style={{ fontSize: 100, color: \"#fff\" }} />\r\n                    <Typography\r\n                        variant=\"h2\"\r\n                        style={{ fontFamily: \"'Pacifico', cursive\" }}\r\n                    >\r\n                        taNotes\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </MuiThemeProvider>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport { Face, Fingerprint, PermIdentity } from \"@material-ui/icons\";\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    handleChange = input => e => {\r\n        this.setState({ [input]: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { firstName, lastName, email, password } = this.state;\r\n        return (\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                style={{ width: \"600px\", margin: \"30px auto\" }}\r\n            >\r\n                <Paper\r\n                    style={{\r\n                        width: \"inherit\",\r\n                        backgroundColor: \"#616161\",\r\n                        padding: \"100px\"\r\n                    }}\r\n                >\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"center\"\r\n                        style={{ textAlign: \"center\" }}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <PermIdentity\r\n                                style={{ fontSize: 200, color: \"#fff\" }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                            <Typography variant=\"title\">\r\n                                Register A New User\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Face style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                autoFocus\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Face style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                autoFocus\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Face style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                type=\"email\"\r\n                                fullWidth\r\n                                autoFocus\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Fingerprint style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        spacing={8}\r\n                        alignItems=\"flex-end\"\r\n                        style={{ padding: \"20px\" }}\r\n                    >\r\n                        <Grid item>\r\n                            <Fingerprint style={{ color: \"#FFF3E0\" }} />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                id=\"passConfirm\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container alignItems=\"center\" justify=\"space-between\">\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                disableFocusRipple\r\n                                disableRipple\r\n                                style={{ textTransform: \"none\" }}\r\n                                variant=\"text\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Forgot Password ?\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        justify=\"center\"\r\n                        style={{ padding: \"5px 10px\", marginTop: \"10px\" }}\r\n                    >\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"raised\"\r\n                            color=\"primary\"\r\n                            style={{ textTransform: \"none\" }}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NoteList from \"../components/NoteList\";\nimport NoteBox from \"../components/NoteBox\";\nimport NavBar from \"../components/NavBar\";\nimport Register from \"../components/Register\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CheckBox from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlank from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport \"./App.css\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport yellow from \"@material-ui/core/colors/yellow\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: yellow,\n        secondary: {\n            main: \"#f44336\"\n        }\n    }\n});\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            currentNoteTitle: \"my note\",\n            currentNoteText: \"hi, this is my note\",\n            isSaved: false,\n            currentNote: 0,\n            noteTitles: [\"test1\", \"test2\"],\n            noteTexts: [\"test1\", \"test2\"],\n            signedIn: true\n        };\n\n        this.timeoutId = null;\n        this.onTitleChange = this.onTitleChange.bind(this);\n        this.onTextChange = this.onTextChange.bind(this);\n        this.onCreateNote = this.onCreateNote.bind(this);\n        this.onClickTitle = this.onClickTitle.bind(this);\n        this.saveToDatabase = this.saveToDatabase.bind(this);\n    }\n    /* \n  componentDidMount() {\n    fetch('http://localhost:3000')\n      .then(response => response.json())\n      .then(db => {\n        if (db.noteTexts) {\n            console.log(db.noteTexts)\n        }\n      })\n      .catch('');\n  }\n */\n    onTitleChange = event => {\n        const newTitles = this.state.noteTitles.slice();\n        newTitles[this.state.currentNote] = event.target.value;\n        this.setState({ noteTitles: newTitles });\n        this.saveToDatabase();\n    };\n\n    onTextChange = event => {\n        const newTexts = this.state.noteTexts.slice();\n        newTexts[this.state.currentNote] = event.target.value;\n        this.setState({ noteTexts: newTexts });\n        this.saveToDatabase();\n    };\n\n    onCreateNote = () => {\n        const newNote = this.state.noteTitles.length;\n        const newTitles = [...this.state.noteTitles, \"\"];\n        const newTexts = [...this.state.noteTexts, \"\"];\n        this.setState({ noteTitles: newTitles });\n        this.setState({ noteTexts: newTexts });\n        this.setState({ currentNote: newNote });\n    };\n\n    onClickTitle = event => {\n        const title = event.target.id;\n        this.setState({ currentNote: title });\n    };\n\n    saveToDatabase() {\n        this.setState({ isSaved: false });\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n        this.timeoutId = setTimeout(() => {\n            this.setState({ isSaved: true });\n        }, 3000);\n    }\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Grid\n                    container\n                    spacing={12}\n                    alignItems=\"stretch\"\n                    style={{ backgroundColor: \"#424242\" }}\n                >\n                    <Grid item xs={12}>\n                        <NavBar />\n                    </Grid>\n                    <Grid item xs={12}>\n                        {this.state.signedIn === false ? (\n                            <Register />\n                        ) : (\n                            <Grid container alignItems=\"stretch\" spacing={12}>\n                                <Grid item xs={12} sm={12} md={9}>\n                                    <NoteBox\n                                        currentNoteTitle={\n                                            this.state.noteTitles[\n                                                this.state.currentNote\n                                            ]\n                                        }\n                                        currentNoteText={\n                                            this.state.noteTexts[\n                                                this.state.currentNote\n                                            ]\n                                        }\n                                        titleChange={this.onTitleChange}\n                                        textChange={this.onTextChange}\n                                    />\n                                </Grid>\n                                <Grid\n                                    item\n                                    alignItems=\"stretch\"\n                                    xs={12}\n                                    sm={12}\n                                    md={3}\n                                >\n                                    <NoteList\n                                        noteTitles={this.state.noteTitles}\n                                        clickTitle={this.onClickTitle}\n                                        createNote={this.onCreateNote}\n                                    />\n                                </Grid>\n                            </Grid>\n                        )}\n                    </Grid>\n                    <Grid item xs={12}>\n                        <div className=\"footer\">\n                            <Grid container spacing={16}>\n                                <Grid item xs={12}>\n                                    <Grid\n                                        container\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid item>Saved:</Grid>\n                                        <Grid item>\n                                            {this.state.isSaved ? (\n                                                <CheckBox\n                                                    style={{ fontSize: 40 }}\n                                                />\n                                            ) : (\n                                                <CheckBoxOutlineBlank\n                                                    style={{ fontSize: 40 }}\n                                                />\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    style={{ textAlign: \"center\" }}\n                                >\n                                    Current Note:{\" \"}\n                                    {\n                                        this.state.noteTitles[\n                                            this.state.currentNote\n                                        ]\n                                    }\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                </Grid>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}